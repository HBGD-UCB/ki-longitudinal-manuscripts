# Subset to  just identifying and anthro data
#--------------------------------------------
d <- d %>% subset(., select=c(studyid, subjid, country, region, measurefreq, tr, sex, agedays, haz, whz, waz, muaz, latitude, longitud))
#Check for duplicate agedays
dup_age <- d %>% group_by(studyid, subjid, agedays) %>%
summarize(N=n())
mean(dup_age$N)
# count number of studies
length(names(table(d$studyid)))
# table of studies
table(d$studyid)
table(d$studyid,d$country)
#--------------------------------------------
# order data, create measurement id, and
# drop unrealistic measures depending on
# anthropometry measure
#--------------------------------------------
stunt_mort <- d %>% filter(haz >= -6 & haz <=6) %>%
subset(., select = - c(whz, waz, muaz)) %>%
arrange(studyid,subjid,agedays) %>%
group_by(studyid,subjid) %>%
arrange(studyid,subjid,agedays) %>%
mutate(measid=seq_along(subjid))
wast_mort <- d %>% filter(whz >= -5 & whz <=5) %>%
subset(., select = - c(haz, waz, muaz)) %>%
arrange(studyid,subjid,agedays) %>%
group_by(studyid,subjid) %>%
arrange(studyid,subjid,agedays) %>%
mutate(measid=seq_along(subjid))
waz_mort <- d %>% filter(waz >= -5 & waz <=5) %>%
arrange(studyid,subjid,agedays) %>%
group_by(studyid,subjid) %>%
arrange(studyid,subjid,agedays) %>%
mutate(measid=seq_along(subjid))
co_mort <- d %>% filter(haz >= -6 & haz <=6 & whz >= -5 & whz <=5) %>%
arrange(studyid,subjid,agedays) %>%
group_by(studyid,subjid) %>%
arrange(studyid,subjid,agedays) %>%
mutate(measid=seq_along(subjid))
#--------------------------------------------
# Save datasets with yearly studies for
# mortality analysis
#--------------------------------------------
save(stunt_mort, wast_mort, waz_mort, co_mort, file=paste0(ghapdata_dir, "mortality_anthro_data.RData"))
#--------------------------------------------
# Subset to non-yearly and save risk factor data
#--------------------------------------------
#Keep monthly and quarterly studies
stunt_rf <- stunt_mort %>% filter(measurefreq!="yearly")
wast_rf <- wast_mort %>% filter(measurefreq!="yearly")
waz_rf <- waz_mort %>% filter(measurefreq!="yearly")
co_rf <- co_mort %>% filter(measurefreq!="yearly")
saveRDS(stunt_rf, paste0(ghapdata_dir, "rf_stunting_data.rds"))
saveRDS(wast_rf, paste0(ghapdata_dir, "rf_wasting_data.rds"))
saveRDS(waz_rf, paste0(ghapdata_dir, "rf_underweight_data.rds"))
saveRDS(co_rf, paste0(ghapdata_dir, "rf_co_occurrence_data.rds"))
#--------------------------------------------
# Subset to and save descriptive epi data
#--------------------------------------------
int_arms <- function(d){
d=d[-which(d$studyid=="kiGH5241-JiVitA-4" & d$tr!="Control"),]
d=d[-which(d$studyid=="ki1119695-PROBIT" & d$tr!="Control"),]
d=d[-which(d$studyid=="ki1000304b-SAS-FoodSuppl" & d$tr!="Control"),]
d=d[-which(d$studyid=="ki1112895-iLiNS-Zinc" & d$tr!="Control"),]
d=d[-which(d$studyid=="ki1000304b-SAS-CompFeed" & d$tr!="Control"),]
d=d[-which(d$studyid=="kiGH5241-JiVitA-3" & d$tr!="Control"),]
d=d[-which(d$studyid=="ki1135781-COHORTS" & d$tr=="Other"),]
return(d)
}
stunt <- drop_int_arms(stunt_rf)
drop_int_arms <- function(d){
d=d[-which(d$studyid=="kiGH5241-JiVitA-4" & d$tr!="Control"),]
d=d[-which(d$studyid=="ki1119695-PROBIT" & d$tr!="Control"),]
d=d[-which(d$studyid=="ki1000304b-SAS-FoodSuppl" & d$tr!="Control"),]
d=d[-which(d$studyid=="ki1112895-iLiNS-Zinc" & d$tr!="Control"),]
d=d[-which(d$studyid=="ki1000304b-SAS-CompFeed" & d$tr!="Control"),]
d=d[-which(d$studyid=="kiGH5241-JiVitA-3" & d$tr!="Control"),]
d=d[-which(d$studyid=="ki1135781-COHORTS" & d$tr=="Other"),]
return(d)
}
stunt <- drop_int_arms(stunt_rf)
d<-stunt_rf
table(d$tr)
which(d$studyid=="kiGH5241-JiVitA-4" & d$tr!="Control")
d=d[-which(d$studyid=="kiGH5241-JiVitA-4" & d$tr!="Control"),]
d=d[-which(d$studyid=="ki1119695-PROBIT" & d$tr!="Control"),]
d<-stunt_rf
tabl4e(d$studyid, d$tr)
table(d$studyid, d$tr)
d <- readRDS(paste0(ghapdata_dir, "ki-manuscript-dataset.rds"))
table(d$studyid, d$tr)
cov <- readRDS(paste0(ghapdata_dir,"FINAL_clean_covariates.rds"))
table(cov$studyid, cov$tr)
rm(list=ls())
source(paste0(here::here(), "/0-config.R"))
#load longform anthropometry and mortality data
Zscores <- readRDS(paste0(ghapdata_dir, "FINAL_only_included_studies.rds"))
#keep only Z-scores and mortality variables, and month of measurement
dput(colnames(Zscores))
Zscores <- Zscores %>%
subset(., select = c(studyid, country, region, subjid, agedays,
waz, haz, whz, muaz, month, dead, agedth,
latitude, longitud, causedth))
#load covariate dataset (one row per child)
cov <- readRDS(paste0(ghapdata_dir,"FINAL_clean_covariates.rds"))
dput(colnames(cov))
cov <- cov %>% subset(., select = c(studyid, subjid, sex, country, arm, tr,
gagebrth, brthmon, parity, birthwt, birthlen, vagbrth,
hdlvry, mage, mhtcm, mwtkg, mbmi, meducyrs, single,
fage, fhtcm, feducyrs, trth2o, cleanck, impfloor,
nrooms, nhh, nchldlt5, earlybf, hfoodsec, measurefreq,
anywast06, pers_wast, enstunt, enwast, hhwealth_quart,
id, W_gagebrth, W_birthwt, W_birthlen, W_mage, W_mhtcm,
W_mwtkg, W_mbmi, W_fage, W_fhtcm, W_meducyrs, W_feducyrs,
W_nrooms, W_nhh, W_nchldlt5, W_parity, impsan, safeh20,
perdiar6, perdiar24, W_perdiar6, W_perdiar24,
predexfd6))
Zscores$subjid <- as.character(Zscores$subjid)
dim(Zscores)
dim(cov)
d <- left_join(Zscores, cov, by = c("studyid", "subjid", "country"))
dim(d)
table(d$studyid, d$tr)
##Drop observations missing all anthropometry
dim(d)
d <- d %>% filter(!is.na(haz) & !is.na(whz) & !is.na(waz) & !is.na(muaz))
dim(d)
table(d$studyid, d$tr)
d <- left_join(Zscores, cov, by = c("studyid", "subjid", "country"))
dim(d)
df <- d %>% filter(studyid=="ki1119695-PROBIT")
head(df)
table(is.na(df$haz), d$tr)
table(is.na(df$haz), df$tr)
d <- left_join(Zscores, cov, by = c("studyid", "subjid", "country"))
dim(d)
##Drop observations missing all anthropometry
dim(d)
d <- d %>% filter(!is.na(haz) | !is.na(whz) | !is.na(waz) | !is.na(muaz))
dim(d)
saveRDS(d, file=paste0(ghapdata_dir,"ki-manuscript-dataset.rds"))
table(d$studyid, d$tr)
rm(list=ls())
source(paste0(here::here(), "/0-config.R"))
#load longform anthropometry and mortality data
Zscores <- readRDS(paste0(ghapdata_dir, "FINAL_only_included_studies.rds"))
#keep only Z-scores and mortality variables, and month of measurement
dput(colnames(Zscores))
Zscores <- Zscores %>%
subset(., select = c(studyid, country, region, measurefreq, subjid, agedays,
waz, haz, whz, muaz, tr, month, brthweek,  dead, agedth,
latitude, longitud, causedth))
#load covariate dataset (one row per child)
cov <- readRDS(paste0(ghapdata_dir,"FINAL_clean_covariates.rds"))
dput(colnames(cov))
cov <- cov %>% subset(., select = c(studyid, subjid, sex, country, arm,
gagebrth, brthmon, parity, birthwt, birthlen, vagbrth,
hdlvry, mage, mhtcm, mwtkg, mbmi, meducyrs, single,
fage, fhtcm, feducyrs, trth2o, cleanck, impfloor,
nrooms, nhh, nchldlt5, earlybf, hfoodsec,
anywast06, pers_wast, enstunt, enwast, hhwealth_quart,
id, W_gagebrth, W_birthwt, W_birthlen, W_mage, W_mhtcm,
W_mwtkg, W_mbmi, W_fage, W_fhtcm, W_meducyrs, W_feducyrs,
W_nrooms, W_nhh, W_nchldlt5, W_parity, impsan, safeh20,
perdiar6, perdiar24, W_perdiar6, W_perdiar24,
predexfd6))
Zscores$subjid <- as.character(Zscores$subjid)
dim(Zscores)
dim(cov)
d <- left_join(Zscores, cov, by = c("studyid", "subjid", "country"))
dim(d)
rm(Zscores, cov)
gc()
##Drop observations missing all anthropometry
dim(d)
d <- d %>% filter(!is.na(haz) | !is.na(whz) | !is.na(waz) | !is.na(muaz))
dim(d)
table(d$studyid, d$tr)
saveRDS(d, file=paste0(ghapdata_dir,"ki-manuscript-dataset.rds"))
#-----------------------------------
# Wasting analysis
# Objective 1a
# Import data, subset to relevant variables
#-----------------------------------
rm(list=ls())
source(paste0(here::here(), "/0-config.R"))
#--------------------------------------------
# Read in .csv file and save as an .rds file
#--------------------------------------------
d <- readRDS(paste0(ghapdata_dir, "ki-manuscript-dataset.rds"))
#--------------------------------------------
# Subset to  just identifying, Z-score data, and time data
#--------------------------------------------
d<-d %>% subset(., select=c(studyid, subjid, country, agedays, month, whz, haz, waz, latitude, longitud, brthyr, brthweek, brthmon))
d <- d %>% filter(agedays < 24 * 30.4167)
d <- d %>% filter(!is.na(brthweek))
#convert subjid to character for the merge with covariate dataset
d$subjid <- as.character(d$subjid)
#Monthly studies
# d <- d[d$studyid %in% c(
#   "ki0047075b-MAL-ED",
#   "ki1000108-CMC-V-BCS-2002",
#   "ki1000108-IRC",
#   "ki1000109-EE",
#   "ki1000109-ResPak",
#   "ki1017093b-PROVIDE",
#   "ki1066203-TanzaniaChild2",
#   "ki1101329-Keneba",
#   "ki1112895-Guatemala BSC",
#   "ki1113344-GMS-Nepal",
#   "ki1114097-CONTENT"
# ),]
d <- d %>% filter(measurefreq=="monthly")
#Has Z-score data
d <- d %>% filter(!is.na(whz)) %>% filter(whz < 5 & whz > (-5))
#estimate birthday
d$birthday <- d$brthweek *7 - 7 #Minus 7 days so week 1 starts at 0 and week 53 is day 364
#calculate study day of measurement (with 1 being the first day of the start of the study year)
d$studyday <-  d$birthday + d$agedays
#calculate julian day of measurement
d$jday <- ((d$birthday + d$agedays)/364)%%1 * 364
summary(d$jday)
d <- d %>% mutate(country = toupper(country))
d <- d %>% mutate(region = case_when(
country=="BANGLADESH" | country=="INDIA"|
country=="NEPAL" | country=="PAKISTAN"|
country=="PHILIPPINES"| country=="CHINA"|
country=="THAILAND"|country=="SINGAPORE"|
country=='OMAN'~ "Asia",
country=="KENYA"|
country=="GHANA"|
country=="BURKINA FASO"|
country=="GUINEA-BISSAU"|
country=="MALAWI"|
country=="SOUTH AFRICA"|
country=="TANZANIA, UNITED REPUBLIC OF"|
country=="TANZANIA"|
country=="ZIMBABWE"|
country=="GAMBIA"|
country=='CONGO, THE DEMOCRATIC REPUBLIC OF' ~ "Africa",
country=="BRAZIL" | country=="GUATEMALA" |
country=="PERU"|country=='ECUADOR'   ~ "Latin America",
country=='UNITED STATES' | country=='UNITED KINGDOM'|country=='ITALY'|
# country=='NETHERLANDS'|
country=='BELARUS'~ 'N.America & Europe',
TRUE                                    ~ "Other"
))
#-----------------------------------
# Wasting analysis
# Objective 1a
# Import data, subset to relevant variables
#-----------------------------------
rm(list=ls())
source(paste0(here::here(), "/0-config.R"))
#--------------------------------------------
# Read in .csv file and save as an .rds file
#--------------------------------------------
d <- readRDS(paste0(ghapdata_dir, "ki-manuscript-dataset.rds"))
#--------------------------------------------
# Subset to  just identifying, Z-score data, and time data
#--------------------------------------------
d<-d %>% subset(., select=c(studyid, subjid, country, agedays, month, whz, haz, waz, latitude, longitud, brthyr, brthweek, brthmon))
d <- d %>% filter(agedays < 24 * 30.4167)
d <- d %>% filter(!is.na(brthweek))
#convert subjid to character for the merge with covariate dataset
d$subjid <- as.character(d$subjid)
#Monthly studies
# d <- d[d$studyid %in% c(
#   "ki0047075b-MAL-ED",
#   "ki1000108-CMC-V-BCS-2002",
#   "ki1000108-IRC",
#   "ki1000109-EE",
#   "ki1000109-ResPak",
#   "ki1017093b-PROVIDE",
#   "ki1066203-TanzaniaChild2",
#   "ki1101329-Keneba",
#   "ki1112895-Guatemala BSC",
#   "ki1113344-GMS-Nepal",
#   "ki1114097-CONTENT"
# ),]
d <- d %>% filter(measurefreq=="monthly")
#Has Z-score data
d <- d %>% filter(!is.na(whz)) %>% filter(whz < 5 & whz > (-5))
#estimate birthday
d$birthday <- d$brthweek *7 - 7 #Minus 7 days so week 1 starts at 0 and week 53 is day 364
#calculate study day of measurement (with 1 being the first day of the start of the study year)
d$studyday <-  d$birthday + d$agedays
#calculate julian day of measurement
d$jday <- ((d$birthday + d$agedays)/364)%%1 * 364
summary(d$jday)
saveRDS(d, file=paste0(ghapdata_dir,"seasonality_data.rds"))
#-----------------------------------
# Wasting analysis
# Objective 1a
# Import data, subset to relevant variables
#-----------------------------------
rm(list=ls())
source(paste0(here::here(), "/0-config.R"))
#--------------------------------------------
# Read in .csv file and save as an .rds file
#--------------------------------------------
d <- readRDS(paste0(ghapdata_dir, "ki-manuscript-dataset.rds"))
#--------------------------------------------
# Subset to  just identifying, Z-score data, and time data
#--------------------------------------------
d<-d %>% subset(., select=c(studyid, subjid, country, agedays, month, whz, haz, waz, latitude, longitud, brthweek, brthmon))
d <- d %>% filter(agedays < 24 * 30.4167)
d <- d %>% filter(!is.na(brthweek))
#convert subjid to character for the merge with covariate dataset
d$subjid <- as.character(d$subjid)
#Monthly studies
# d <- d[d$studyid %in% c(
#   "ki0047075b-MAL-ED",
#   "ki1000108-CMC-V-BCS-2002",
#   "ki1000108-IRC",
#   "ki1000109-EE",
#   "ki1000109-ResPak",
#   "ki1017093b-PROVIDE",
#   "ki1066203-TanzaniaChild2",
#   "ki1101329-Keneba",
#   "ki1112895-Guatemala BSC",
#   "ki1113344-GMS-Nepal",
#   "ki1114097-CONTENT"
# ),]
d <- d %>% filter(measurefreq=="monthly")
#Has Z-score data
d <- d %>% filter(!is.na(whz)) %>% filter(whz < 5 & whz > (-5))
#estimate birthday
d$birthday <- d$brthweek *7 - 7 #Minus 7 days so week 1 starts at 0 and week 53 is day 364
#calculate study day of measurement (with 1 being the first day of the start of the study year)
d$studyday <-  d$birthday + d$agedays
#calculate julian day of measurement
d$jday <- ((d$birthday + d$agedays)/364)%%1 * 364
summary(d$jday)
saveRDS(d, file=paste0(ghapdata_dir,"seasonality_data.rds"))
#-----------------------------------
# Wasting analysis
# Objective 1a
# Import data, subset to relevant variables
#-----------------------------------
rm(list=ls())
source(paste0(here::here(), "/0-config.R"))
#--------------------------------------------
# Read in .csv file and save as an .rds file
#--------------------------------------------
d <- readRDS(paste0(ghapdata_dir, "ki-manuscript-dataset.rds"))
#--------------------------------------------
# Subset to  just identifying, Z-score data, and time data
#--------------------------------------------
d<-d %>% subset(., select=c(studyid, subjid, country, agedays, measurefreq, month, whz, haz, waz, latitude, longitud, brthweek, brthmon))
d <- d %>% filter(agedays < 24 * 30.4167)
d <- d %>% filter(!is.na(brthweek))
#convert subjid to character for the merge with covariate dataset
d$subjid <- as.character(d$subjid)
d <- d %>% filter(measurefreq=="monthly")
#Has Z-score data
d <- d %>% filter(!is.na(whz)) %>% filter(whz < 5 & whz > (-5))
#estimate birthday
d$birthday <- d$brthweek *7 - 7 #Minus 7 days so week 1 starts at 0 and week 53 is day 364
#calculate study day of measurement (with 1 being the first day of the start of the study year)
d$studyday <-  d$birthday + d$agedays
#calculate julian day of measurement
d$jday <- ((d$birthday + d$agedays)/364)%%1 * 364
summary(d$jday)
saveRDS(d, file=paste0(ghapdata_dir,"seasonality_data.rds"))
rm(list=ls())
source(paste0(here::here(), "/0-config.R"))
library(ICCbin)
#load("U:/Data/Stunting/stunting_data.RData")
d <- readRDS(paste0(ghapdata_dir, "ki-manuscript-dataset.rds"))
d <- d %>% filter(agedays < 24 * 30.4167) %>%
group_by(studyid, subjid) %>%
filter(agedays==max(agedays))
# cov<-readRDS("U:/ucb-superlearner/Stunting rallies/FINAL_clean_covariates.rds")
# cov <- cov %>% subset(., select = -c(tr))
#
# dim(d)
# d <- left_join(d, cov, by=c("studyid", "subjid", "country"))
# dim(d)
# table(is.na(d$id))
# head(d)
d$stunt <- 1*(d$haz < -2)
d <- d %>% filter(tr!="" & !is.na(id))
d <- d %>% filter(measurefreq!="yearly")
table(d$studyid)
table(d$studyid, is.na(d$id))
fulldf<-NULL
for(i in 1:length(unique(d$studyid))){
df <- d[d$studyid==unique(d$studyid)[i],] %>% select(stunt, id)
if(nrow(df)!=length(unique(df$id))){
print(i)
res <- iccbin(cid = id, y = stunt, data = df, method = c("aov", "rm"),
ci.type = c("aov", "rm"), alpha = .01)
resdf <- data.frame(study= df$studyid[1],
aov=res$estimates$ICC[1], aov.lb=res$ci$LowerCI[1], aov.ub=res$ci$UpperCI[1],
resamp=res$estimates$ICC[2], resamp.lb=res$ci$LowerCI[2], resamp.ub=res$ci$UpperCI[2])
fulldf <- rbind(fulldf, resdf)
}
}
for(i in 2:7){
fulldf[,i] <- round(as.numeric(fulldf[,i]),2)
}
saveRDS(fulldf, file=paste0(res_dir,"icc_res.rds"))
fulldf
d <- readRDS(paste0(ghapdata_dir, "ki-manuscript-dataset.rds"))
d <- d %>% filter(agedays < 24 * 30.4167) %>%
group_by(studyid, subjid) %>%
filter(agedays==max(agedays)) %>%
ungroup()
# cov<-readRDS("U:/ucb-superlearner/Stunting rallies/FINAL_clean_covariates.rds")
# cov <- cov %>% subset(., select = -c(tr))
#
# dim(d)
# d <- left_join(d, cov, by=c("studyid", "subjid", "country"))
# dim(d)
# table(is.na(d$id))
# head(d)
d$stunt <- 1*(d$haz < -2)
d <- d %>% filter(tr!="" & !is.na(id))
d <- d %>% filter(measurefreq!="yearly")
table(d$studyid)
table(d$studyid, is.na(d$id))
i<-2
df <- d[d$studyid==unique(d$studyid)[i],] %>% select(stunt, id)
fulldf<-NULL
for(i in 1:length(unique(d$studyid))){
df <- d[d$studyid==unique(d$studyid)[i],] %>% select(stunt, id)
if(nrow(df)!=length(unique(df$id))){
print(i)
res <- iccbin(cid = id, y = stunt, data = df, method = c("aov", "rm"),
ci.type = c("aov", "rm"), alpha = .01)
resdf <- data.frame(study= df$studyid[1],
aov=res$estimates$ICC[1], aov.lb=res$ci$LowerCI[1], aov.ub=res$ci$UpperCI[1],
resamp=res$estimates$ICC[2], resamp.lb=res$ci$LowerCI[2], resamp.ub=res$ci$UpperCI[2])
fulldf <- rbind(fulldf, resdf)
}
}
i
fulldf
df <- d[d$studyid==unique(d$studyid)[i],] %>% select(stunt, id)
nrow(df)!=length(unique(df$id))
print(i)
res <- iccbin(cid = id, y = stunt, data = df, method = c("aov", "rm"),
ci.type = c("aov", "rm"), alpha = .01)
df
table(df$stunt)
table(is.na(df$stunt))
rm(list=ls())
source(paste0(here::here(), "/0-config.R"))
library(ICCbin)
#load("U:/Data/Stunting/stunting_data.RData")
d <- readRDS(paste0(ghapdata_dir, "ki-manuscript-dataset.rds"))
d <- d %>% filter(agedays < 24 * 30.4167, !is.na(haz)) %>%
group_by(studyid, subjid) %>%
filter(agedays==max(agedays)) %>%
ungroup()
# cov<-readRDS("U:/ucb-superlearner/Stunting rallies/FINAL_clean_covariates.rds")
# cov <- cov %>% subset(., select = -c(tr))
#
# dim(d)
# d <- left_join(d, cov, by=c("studyid", "subjid", "country"))
# dim(d)
# table(is.na(d$id))
# head(d)
d$stunt <- 1*(d$haz < -2)
d <- d %>% filter(tr!="" & !is.na(id))
d <- d %>% filter(measurefreq!="yearly")
table(d$studyid)
table(d$studyid, is.na(d$id))
fulldf<-NULL
for(i in 1:length(unique(d$studyid))){
df <- d[d$studyid==unique(d$studyid)[i],] %>% select(stunt, id)
if(nrow(df)!=length(unique(df$id))){
print(i)
res <- iccbin(cid = id, y = stunt, data = df, method = c("aov", "rm"),
ci.type = c("aov", "rm"), alpha = .01)
resdf <- data.frame(study= df$studyid[1],
aov=res$estimates$ICC[1], aov.lb=res$ci$LowerCI[1], aov.ub=res$ci$UpperCI[1],
resamp=res$estimates$ICC[2], resamp.lb=res$ci$LowerCI[2], resamp.ub=res$ci$UpperCI[2])
fulldf <- rbind(fulldf, resdf)
}
}
i
df <- d[d$studyid==unique(d$studyid)[i],] %>% select(stunt, id)
df
table(is.na(df))
table(df$id)
res <- iccbin(cid = id, y = stunt, data = df, method = c("aov", "rm"),
ci.type = c("aov", "rm"), alpha = .01)
res
head(df)
fulldf<-NULL
for(i in 1:length(unique(d$studyid))){
df <- d[d$studyid==unique(d$studyid)[i],] %>% select(studyid, stunt, id)
if(nrow(df)!=length(unique(df$id))){
print(i)
res <- iccbin(cid = id, y = stunt, data = df, method = c("aov", "rm"),
ci.type = c("aov", "rm"), alpha = .01)
resdf <- data.frame(study= df$studyid[1],
aov=res$estimates$ICC[1], aov.lb=res$ci$LowerCI[1], aov.ub=res$ci$UpperCI[1],
resamp=res$estimates$ICC[2], resamp.lb=res$ci$LowerCI[2], resamp.ub=res$ci$UpperCI[2])
fulldf <- rbind(fulldf, resdf)
}
}
i
df <- d[d$studyid==unique(d$studyid)[i],] %>% select(studyid, stunt, id)
df
table(df$id)
res <- iccbin(cid = id, y = stunt, data = df, method = c("aov", "rm"),
ci.type = c("aov", "rm"), alpha = .01)
table(is.na(df))
R CMD BATCH 1_process_FINAL_dataset.R
