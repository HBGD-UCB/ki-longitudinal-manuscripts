
R version 4.0.4 (2021-02-15) -- "Lost Library Book"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> 
> 
> rm(list = ls())
> source(paste0(here::here(), "/0-config.R"))
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──
✔ ggplot2 3.3.2     ✔ purrr   0.3.4
✔ tibble  3.1.0     ✔ dplyr   1.0.5
✔ tidyr   1.1.1     ✔ stringr 1.4.0
✔ readr   1.3.1     ✔ forcats 0.5.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
here() starts at /home/andrew.mertens/ki-longitudinal-manuscripts

Attaching package: ‘gridExtra’

The following object is masked from ‘package:dplyr’:

    combine


Attaching package: ‘reshape2’

The following object is masked from ‘package:tidyr’:

    smiths

Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

Loading 'metafor' package (version 2.4-0). For an overview 
and introduction to the package please type: help(metafor).

Attaching package: ‘data.table’

The following objects are masked from ‘package:reshape2’:

    dcast, melt

The following objects are masked from ‘package:dplyr’:

    between, first, last

The following object is masked from ‘package:purrr’:

    transpose

Loading required package: viridisLite

Attaching package: ‘maps’

The following object is masked from ‘package:purrr’:

    map


Attaching package: ‘assertthat’

The following object is masked from ‘package:tibble’:

    has_name

Loading required package: nlme

Attaching package: ‘nlme’

The following object is masked from ‘package:dplyr’:

    collapse

This is mgcv 1.8-31. For overview type 'help("mgcv-package")'.

Attaching package: ‘lazyeval’

The following objects are masked from ‘package:purrr’:

    is_atomic, is_formula


Attaching package: ‘scales’

The following object is masked from ‘package:viridis’:

    viridis_pal

The following object is masked from ‘package:purrr’:

    discard

The following object is masked from ‘package:readr’:

    col_factor


Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
Loading required package: survival

Attaching package: ‘survey’

The following object is masked from ‘package:graphics’:

    dotchart

Loading required package: bit

Attaching package: ‘bit’

The following object is masked from ‘package:data.table’:

    setattr

The following object is masked from ‘package:base’:

    xor

Attaching package bit64
package:bit64 (c) 2011-2017 Jens Oehlschlaegel
creators: integer64 runif64 seq :
coercion: as.integer64 as.vector as.logical as.integer as.double as.character as.bitstring
logical operator: ! & | xor != == < <= >= >
arithmetic operator: + - * / %/% %% ^
math: sign abs sqrt log log2 log10
math: floor ceiling trunc round
querying: is.integer64 is.vector [is.atomic} [length] format print str
values: is.na is.nan is.finite is.infinite
aggregation: any all min max range sum prod
cumulation: diff cummin cummax cumsum cumprod
access: length<- [ [<- [[ [[<-
combine: c rep cbind rbind as.data.frame
WARNING don't use as subscripts
WARNING semantics differ from integer
for more help type ?bit64

Attaching package: ‘bit64’

The following objects are masked from ‘package:base’:

    :, %in%, is.double, match, order, rank


Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric

Warning messages:
1: package ‘tidyverse’ was built under R version 4.0.5 
2: package ‘ggnewscale’ was built under R version 4.0.5 
> source(paste0(here::here(),"/0-project-functions/0_descriptive_epi_wast_functions.R"))
> 
> 
> load(paste0(ghapdata_dir, "Wasting_inc_data.RData"))
> 
> 
> 
> 
> #Subset to monthly
> d <- d %>% filter(measurefreq == "monthly")
> 
> 
> #Number of episodes in persistently wasted kids
> df <- d %>% filter(agedays < 24 * 30.4167) %>% 
+   group_by(studyid, country, subjid) %>% 
+   mutate(pers_wast = 1*(mean(whz < (-2)) >= 0.5)) %>%
+   filter(pers_wast == 1)
> 
> df2 <- df %>% group_by(studyid, country, subjid) %>% 
+       summarize(N=n(), num_inc=sum(wast_inc)) %>% ungroup() %>%
+       filter(N>=4)
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
> (table(df2$num_inc))

  1   2   3   4 
274 195  44  10 
> prop.table(table(df2$num_inc))

         1          2          3          4 
0.52390057 0.37284895 0.08413002 0.01912046 
> 
> #Number of episodes in wasted kids
> df <- d %>% filter(agedays < 24 * 30.4167) %>% 
+   group_by(studyid, country, subjid) %>% 
+   mutate(any_wast = max(1*(whz < (-2)))) %>%
+   filter(any_wast == 1)
> 
> df2 <- df %>% group_by(studyid, country, subjid) %>% 
+   summarize(N=n(), num_inc=sum(wast_inc)) %>% ungroup() 
`summarise()` has grouped output by 'studyid', 'country'. You can override using the `.groups` argument.
> 
> table(df2$num_inc)

   1    2    3    4    5 
2747 1045  253   38    2 
> prop.table(table(df2$num_inc))

           1            2            3            4            5 
0.6724602203 0.2558139535 0.0619339045 0.0093023256 0.0004895961 
> 
> 
> 
> 
> 
> 
> 
> rm(list = ls())
> library(epiR)
Package epiR 1.0-15 is loaded
Type help(epi.about) for summary information
Type browseVignettes(package = 'epiR') to learn how to use epiR for applied epidemiological analyses


> 
> source(paste0(here::here(), "/0-config.R"))
> source(paste0(here::here(),"/0-project-functions/0_descriptive_epi_co_functions.R"))
> 
> dfull <- readRDS(paste0(ghapdata_dir,"co_occurrence_data.rds"))
> dfull <- dfull %>% filter(measurefreq=="monthly")
> 
> #load covariates for clustering id
> cov<-readRDS(paste0(ghapdata_dir,"FINAL_clean_covariates.rds"))
> cov <- cov %>% subset(., select = c(studyid, subjid, country, id))
> dfull <- left_join(dfull, cov, by=c("studyid", "subjid", "country"))
> 
> #Proportion of co-occurrent wasting and stunting among children wasted under 3 months
> dfull <- calc.ci.agecat(dfull, range = 6)
> 
> d <- dfull %>% filter(agedays < 24 * 30.4167) %>% 
+   group_by(studyid, country, subjid) %>% 
+   mutate(wast=1*(whz < (-2)), co = 1*(whz < (-2) & haz < (-2))) %>%
+   group_by(studyid, country, subjid, agecat) %>% 
+   arrange(studyid, country, subjid, agecat) %>% 
+   mutate(wast=max(wast), co=last(co)) %>%
+   filter(agecat %in% c("0-6 months","18-24 months")) %>%
+   group_by(studyid, country, subjid) %>% 
+   mutate(wast06=first(wast), co24=last(co)) %>% 
+   filter(first(agecat)=="0-6 months", last(agecat)=="18-24 months") %>%
+   slice(1)
> 
> table(d$wast06, d$co24)
   
       0    1
  0 5418  215
  1 1752  180
> table(d$wast06, d$co24, paste0(d$studyid, d$country))
, ,  = CMC-V-BCS-2002INDIA

   
       0    1
  0  173    5
  1  174   16

, ,  = CMIN Bangladesh93BANGLADESH

   
       0    1
  0  186   17
  1   36    6

, ,  = CMIN Peru89PERU

   
       0    1
  0   85    0
  1    2    0

, ,  = CMIN Peru95PERU

   
       0    1
  0  155    0
  1    4    0

, ,  = CONTENTPERU

   
       0    1
  0  194    0
  1    3    0

, ,  = EEPAKISTAN

   
       0    1
  0  205   28
  1   88   27

, ,  = GMS-NepalNEPAL

   
       0    1
  0  310   33
  1  189   36

, ,  = IRCINDIA

   
       0    1
  0  181    5
  1  214    9

, ,  = KenebaGAMBIA

   
       0    1
  0 1326   60
  1  513   43

, ,  = MAL-EDBANGLADESH

   
       0    1
  0  159    8
  1   46    6

, ,  = MAL-EDBRAZIL

   
       0    1
  0  162    1
  1   13    0

, ,  = MAL-EDINDIA

   
       0    1
  0  148    5
  1   64   11

, ,  = MAL-EDNEPAL

   
       0    1
  0  183    1
  1   44    1

, ,  = MAL-EDPERU

   
       0    1
  0  208    2
  1    8    1

, ,  = MAL-EDSOUTH AFRICA

   
       0    1
  0  213    2
  1   27    0

, ,  = MAL-EDTANZANIA

   
       0    1
  0  212    4
  1   11    1

, ,  = PROVIDEBANGLADESH

   
       0    1
  0  413   23
  1  134   12

, ,  = TanzaniaChild2TANZANIA

   
       0    1
  0  816   19
  1  120    4

, ,  = TDCINDIA

   
       0    1
  0   89    2
  1   62    7

> 
> a<-prop.table(table(d$co24[d$wast06==0]))
> b<-prop.table(table(d$co24[d$wast06==1]))
> 
> b/a

        0         1 
0.9428177 2.4409938 
> 
> dat=table(-d$wast06, -d$co24)
> 
> epi.2by2(dat, method = "cross.sectional", conf.level = 0.95, units = 100, 
+          #homogeneity = "breslow.day", 
+          outcome = "as.columns")
             Outcome +    Outcome -      Total        Prevalence *        Odds
Exposed +          180         1752       1932                9.32      0.1027
Exposed -          215         5418       5633                3.82      0.0397
Total              395         7170       7565                5.22      0.0551

Point estimates and 95% CIs:
-------------------------------------------------------------------
Prevalence ratio                             2.44 (2.02, 2.96)
Odds ratio                                   2.59 (2.11, 3.18)
Attrib prevalence *                          5.50 (4.11, 6.89)
Attrib prevalence in population *            1.40 (0.70, 2.11)
Attrib fraction in exposed (%)              59.03 (50.40, 66.16)
Attrib fraction in population (%)           26.90 (20.20, 33.04)
-------------------------------------------------------------------
 Test that OR = 1: chi2(1) = 87.935 Pr>chi2 = <0.001
 Wald confidence limits
 CI: confidence interval
 * Outcomes per 100 population units 
Warning messages:
1: In N0 * (N0 + N1) * a : NAs produced by integer overflow
2: In N0 * N1 * (c + a) : NAs produced by integer overflow
3: In N0 * N1 * (c + a) : NAs produced by integer overflow
4: In N0 * (N0 + N1) * a : NAs produced by integer overflow
5: In N0 * N1 * (c + a) : NAs produced by integer overflow
6: In N0 * N1 * (c + a) : NAs produced by integer overflow
> 
> #Save dataset for longbow analysis
> save(d, file=paste0(ghapdata_dir,"earlywast_strat_co_rf.Rdata"))
> 
> 
> 
> 
> 
> df <- dfull %>% group_by(studyid, subjid, agecat) %>% mutate(anywast=1*(min(whz) < (-2)), anystunt=1*(min(haz) < (-2)))
> d <- df %>% group_by(studyid, subjid) %>% filter(agecat %in% c("0-6 months", "18-24 months")) %>% arrange(agecat) %>% 
+   filter(first(agecat)=="0-6 months", last(agecat)=="18-24 months") %>%
+   mutate(N=n(), wast06=first(anywast), stunt24=last(anystunt)) %>% slice(1) 
> table(d$N)

   2    3    4    5    6    7    8    9   10   11   12   13   14   15   16   17 
  19   52   73  170  475  874  504  518  863  791 1402 1065  307   85   59   47 
  18   19   20   21   22   23   24   25   26   29 
  29   33   30   46   53   36   29    3    1    1 
> 
> table(d$wast06, d$stunt24)
   
       0    1
  0 3061 2572
  1  898 1034
> table(d$wast06, d$stunt24, paste0(d$studyid, d$country))
, ,  = CMC-V-BCS-2002INDIA

   
      0   1
  0  31 147
  1  20 170

, ,  = CMIN Bangladesh93BANGLADESH

   
      0   1
  0  33 170
  1   8  34

, ,  = CMIN Peru89PERU

   
      0   1
  0  52  33
  1   2   0

, ,  = CMIN Peru95PERU

   
      0   1
  0 107  48
  1   2   2

, ,  = CONTENTPERU

   
      0   1
  0 163  31
  1   3   0

, ,  = EEPAKISTAN

   
      0   1
  0  56 177
  1  24  91

, ,  = GMS-NepalNEPAL

   
      0   1
  0 127 216
  1  88 137

, ,  = IRCINDIA

   
      0   1
  0  80 106
  1 111 112

, ,  = KenebaGAMBIA

   
      0   1
  0 820 566
  1 304 252

, ,  = MAL-EDBANGLADESH

   
      0   1
  0  70  97
  1  24  28

, ,  = MAL-EDBRAZIL

   
      0   1
  0 153  10
  1  11   2

, ,  = MAL-EDINDIA

   
      0   1
  0  61  92
  1  43  32

, ,  = MAL-EDNEPAL

   
      0   1
  0 134  50
  1  31  14

, ,  = MAL-EDPERU

   
      0   1
  0  97 113
  1   6   3

, ,  = MAL-EDSOUTH AFRICA

   
      0   1
  0 108 107
  1  16  11

, ,  = MAL-EDTANZANIA

   
      0   1
  0  32 184
  1   1  11

, ,  = PROVIDEBANGLADESH

   
      0   1
  0 266 170
  1  78  68

, ,  = TanzaniaChild2TANZANIA

   
      0   1
  0 632 203
  1  93  31

, ,  = TDCINDIA

   
      0   1
  0  39  52
  1  33  36

> 
> prop.table(table(d$stunt24[d$wast06==0]))

        0         1 
0.5434049 0.4565951 
> prop.table(table(d$stunt24[d$wast06==1]))

        0         1 
0.4648033 0.5351967 
> 
> 
> 
> dat=table(-d$wast06, -d$stunt24)
> epi.2by2(dat, method = "cross.sectional", conf.level = 0.95, units = 100, 
+           outcome = "as.columns")
             Outcome +    Outcome -      Total        Prevalence *        Odds
Exposed +         1034          898       1932                53.5       1.151
Exposed -         2572         3061       5633                45.7       0.840
Total             3606         3959       7565                47.7       0.911

Point estimates and 95% CIs:
-------------------------------------------------------------------
Prevalence ratio                             1.17 (1.11, 1.23)
Odds ratio                                   1.37 (1.24, 1.52)
Attrib prevalence *                          7.86 (5.28, 10.44)
Attrib prevalence in population *            2.01 (0.29, 3.73)
Attrib fraction in exposed (%)              14.69 (10.28, 18.88)
Attrib fraction in population (%)           4.21 (2.81, 5.59)
-------------------------------------------------------------------
 Test that OR = 1: chi2(1) = 35.629 Pr>chi2 = <0.001
 Wald confidence limits
 CI: confidence interval
 * Outcomes per 100 population units 
Warning messages:
1: In N0 * (N0 + N1) * a : NAs produced by integer overflow
2: In N0 * N1 * (c + a) : NAs produced by integer overflow
3: In N0 * N1 * (c + a) : NAs produced by integer overflow
4: In N0 * (N0 + N1) * a : NAs produced by integer overflow
5: In N0 * N1 * (c + a) : NAs produced by integer overflow
6: In N0 * N1 * (c + a) : NAs produced by integer overflow
> 
> #Save dataset for longbow analysis
> save(d, file=paste0(ghapdata_dir,"earlywast_strat_stunt_rf.Rdata"))
> 
> 
> 
> #Save analysis specifications
> load(paste0(BV_dir,"/results/adjustment_sets_list.Rdata"))
> A <- names(adjustment_sets)
> Avars <- c( "sex",  "brthmon", "month", names(adjustment_sets))
> 
> specify_rf_analysis <- function(A, Y, file,  W=NULL, V= c("agecat","studyid","country"), id="id", adj_sets=adjustment_sets){
+   
+   analyses <- expand.grid(A=A,Y=Y, stringsAsFactors = FALSE, KEEP.OUT.ATTRS = FALSE)
+   analyses$id <- id
+   analyses$strata <- list(V)
+   if(is.null(W)){analyses$W <- adj_sets[analyses$A]}else{
+     analyses$W <- list(W)
+   }
+   names(analyses$W) <- NULL
+   analyses$file <- file
+   
+   return(analyses)
+ }
> 
> 
> earlywast_strat_co <- specify_rf_analysis(A="wast06", Y=c("co24"), file="earlywast_strat_co_rf.Rdata")
> earlywast_strat_stunt <- specify_rf_analysis(A="wast06", Y=c("stunt24"), file="earlywast_strat_stunt_rf.Rdata")
> 
> #bind together datasets
> analyses <- rbind(earlywast_strat_stunt, earlywast_strat_co)
> 
> #Save analysis specification
> save(analyses, file=paste0(here(),"/4-longbow-tmle-analysis/analysis specification/earlywast_strat_analyses.rdata"))
> 
> 
> proc.time()
   user  system elapsed 
 33.914   0.980  34.890 
